name: "Build"

on:
  push:
    branches:
      - "main"
    tags:
      - "*"
  pull_request:
    branches:
      - "main"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: "${{ github.ref != 'refs/heads/main' }}"

jobs:

  BuildWindows:
    runs-on: "windows-2022"

    strategy:
      matrix:
        config:
          - "Release"
        accel: [cuda]

    steps:
      - name: "Get version"
        shell: bash
        run: |
          if [[ $GITHUB_REF =~ ^refs/tags/ ]]
          then version="${GITHUB_REF#refs/tags/}"
          else version=main
          fi
          printf "version=%s" "$version" > "$GITHUB_OUTPUT"
        id: "get-version"

      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}-Windows-${{ matrix.accel }}

      # - name: Install CUDA Toolkit
      #   if: ${{ matrix.accel == 'cuda' }}
      #   id: cuda-toolkit
      #   uses: Jimver/cuda-toolkit@v0.2.21
      #   with:
      #     cuda: '12.5.1'
      #     sub-packages: '["cudart", "nvcc", "cublas", "cublas_dev", "visual_studio_integration"]'
      #     method: 'network'
      - name: Setup CUDA Toolkit
        if: ${{ matrix.accel == 'cuda' }}
        id: cuda-toolkit
        shell: pwsh
        run: ./setup_cuda.ps1
        env:
            INPUT_CUDA_VERSION: '12.5.1'

      - name: Set CUDA_TOOLKIT_ROOT_DIR if CUDA is installed
        if: ${{ matrix.accel == 'cuda' }}
        run: |
          "CUDA_TOOLKIT_ROOT_DIR=$env:CUDA_PATH" >> $env:GITHUB_ENV

      - name: Verify ROCm
        id: verify-hipblas
        if: ${{ matrix.accel == 'hipblas' }}
        run: |
          & 'C:\Program Files\AMD\ROCm\*\bin\clang.exe' --version

      - name: "Run Build-Windows.ps1"
        run: "./Build-Windows.ps1 -Version ${{ steps.get-version.outputs.version }}"
        env:
          BUILD_WITH_ACCEL: ${{ matrix.accel }}

      - uses: "actions/upload-artifact@v4"
        with:
          name: "whispercpp-windows-${{ matrix.accel }}"
          path: "*.zip"

  Release:
    runs-on: "ubuntu-22.04"
    if: github.event_name == 'push'

    needs:
      - "BuildWindows"

    permissions:
      contents: "write"

    defaults:
      run:
        shell: "bash"

    steps:
      - name: "Get version"
        run: |
          if [[ $GITHUB_REF =~ ^refs/tags/ ]]
          then version="${GITHUB_REF#refs/tags/}"
          else version=main
          fi
          printf "version=%s" "$version" > "$GITHUB_OUTPUT"
        id: "get-version"

      - name: "Download build artifacts"
        uses: "actions/download-artifact@v4"

      - name: "Create Release"
        uses: "softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5"
        with:
          draft: true
          tag_name: "${{ steps.get-version.outputs.version }}"
          name: "${{ steps.get-version.outputs.version }}"
          files: |
            ${{ github.workspace }}/**/*.tar.gz
            ${{ github.workspace }}/**/*.zip
